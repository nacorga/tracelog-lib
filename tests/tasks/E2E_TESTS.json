{
  "e2e_tests": [
    {
      "title": "Library Initialization - Success",
      "description": "Validates that TraceLog.init() successfully initializes with a valid project ID, establishes API connection, creates user ID, starts session tracking, and enables all event handlers without errors."
    },
    {
      "title": "Library Initialization - Invalid Project ID",
      "description": "Verifies that TraceLog.init() throws appropriate error when called with missing, empty, or invalid project ID, and ensures no tracking occurs."
    },
    {
      "title": "Library Initialization - Browser Environment Check",
      "description": "Confirms that initialization fails gracefully with clear error message when called in non-browser environments (missing window or document objects)."
    },
    {
      "title": "Library Initialization - Duplicate Initialization Prevention",
      "description": "Ensures that calling TraceLog.init() multiple times doesn't create duplicate instances or interfere with existing tracking functionality."
    },
    {
      "title": "Session Management - Session Start",
      "description": "Validates that a new session is automatically created on first activity, generates unique session ID, tracks SESSION_START event, and persists session data to storage."
    },
    {
      "title": "Session Management - Session Timeout",
      "description": "Verifies that sessions properly timeout after configured inactivity period (default 15 minutes), triggers SESSION_END event with 'inactivity' reason, and cleans up session data."
    },
    {
      "title": "Session Management - Custom Session Timeout",
      "description": "Tests that custom session timeout values are respected, validates timeout bounds (30 seconds to 24 hours), and sessions end according to custom timeouts."
    },
    {
      "title": "Session Management - Session Recovery",
      "description": "Validates that orphaned sessions can be recovered after page reload, maintains session continuity, and properly tracks recovered sessions with session_start_recovered flag."
    },
    {
      "title": "Session Management - Cross-Tab Session Coordination",
      "description": "Ensures that multiple tabs share the same session when appropriate, one tab acts as session leader, and session ends only when all tabs are closed or inactive."
    },
    {
      "title": "Session Management - Page Unload Session End",
      "description": "Verifies that sessions properly end on page unload/beforeunload events, uses synchronous methods for reliable event delivery, and tracks SESSION_END with 'page_unload' reason."
    },
    {
      "title": "Custom Event Tracking - Valid Events",
      "description": "Tests that TraceLog.event() successfully tracks custom events with valid names and metadata, sanitizes input data, and delivers events to the API endpoint."
    },
    {
      "title": "Custom Event Tracking - Invalid Event Names",
      "description": "Validates that invalid event names (too long, containing XSS patterns, reserved words) are rejected with appropriate error messages in QA mode."
    },
    {
      "title": "Custom Event Tracking - Invalid Metadata",
      "description": "Ensures that invalid metadata (circular references, too large objects, invalid types) is rejected or sanitized properly, with clear error messages in QA mode."
    },
    {
      "title": "Custom Event Tracking - Metadata Sanitization",
      "description": "Verifies that potentially dangerous metadata (XSS patterns, script tags) is properly sanitized while preserving legitimate data."
    },
    {
      "title": "Page View Tracking - Initial Page Load",
      "description": "Validates that initial page view is tracked on library initialization with correct URL, referrer, title, and UTM parameters if present."
    },
    {
      "title": "Page View Tracking - Navigation Events",
      "description": "Tests that page view events are properly tracked for history.pushState, history.replaceState, popstate, and hashchange events with accurate from_page_url."
    },
    {
      "title": "Page View Tracking - URL Normalization",
      "description": "Ensures that sensitive query parameters are removed from tracked URLs according to configuration, while preserving important URL components."
    },
    {
      "title": "Click Tracking - Interactive Elements",
      "description": "Validates that clicks on buttons, links, and other interactive elements are tracked with accurate coordinates, element attributes, and text content."
    },
    {
      "title": "Click Tracking - Custom Data Attributes",
      "description": "Tests that elements with data-tl-name and data-tl-value attributes trigger custom events in addition to click tracking."
    },
    {
      "title": "Click Tracking - Text Content Extraction",
      "description": "Verifies that relevant text content is extracted from clicked elements, handles large containers appropriately, and truncates excessive text."
    },
    {
      "title": "Click Tracking - Coordinate Calculation",
      "description": "Ensures that both absolute and relative click coordinates are calculated correctly for elements of various sizes and positions."
    },
    {
      "title": "Scroll Tracking - Window Scroll",
      "description": "Validates that window scroll events are debounced, tracked with accurate depth percentages and scroll direction (up/down)."
    },
    {
      "title": "Scroll Tracking - Custom Container Scroll",
      "description": "Tests that scroll tracking works correctly within custom container elements specified by CSS selectors in configuration."
    },
    {
      "title": "Scroll Tracking - Scroll Suppression",
      "description": "Verifies that scroll events are properly suppressed immediately after page view events to avoid noise from automatic scrolling."
    },
    {
      "title": "Performance Tracking - Web Vitals Collection",
      "description": "Tests that Core Web Vitals (LCP, CLS, FCP, TTFB, INP) are collected and reported with accurate values and proper sampling."
    },
    {
      "title": "Performance Tracking - Long Task Detection",
      "description": "Validates that long tasks are detected and tracked with appropriate throttling and sampling to avoid excessive events."
    },
    {
      "title": "Performance Tracking - Web Vitals Fallback",
      "description": "Ensures that fallback performance tracking works when web-vitals library is unavailable, using native Performance Observer APIs."
    },
    {
      "title": "Error Tracking - JavaScript Errors",
      "description": "Tests that JavaScript errors and unhandled promise rejections are captured, sanitized for PII, and tracked with appropriate sampling."
    },
    {
      "title": "Error Tracking - Network Errors",
      "description": "Validates that failed HTTP requests (fetch and XHR) are tracked with error details, status codes, and duration information."
    },
    {
      "title": "Error Tracking - PII Sanitization",
      "description": "Ensures that error messages containing emails, phone numbers, or credit card patterns are properly sanitized before tracking."
    },
    {
      "title": "User Management - User ID Generation",
      "description": "Tests that unique user IDs are generated and persisted in localStorage, remain consistent across sessions, and are properly scoped by project ID."
    },
    {
      "title": "User Management - User ID Persistence",
      "description": "Validates that user IDs survive browser restarts, localStorage clearing scenarios, and are recovered appropriately."
    },
    {
      "title": "Device Detection - Device Type Classification",
      "description": "Tests that devices are correctly classified as mobile, tablet, or desktop based on screen size, user agent, and input capabilities."
    },
    {
      "title": "Storage Management - LocalStorage Operations",
      "description": "Validates that all storage operations (get, set, remove) work correctly and gracefully fallback to in-memory storage when localStorage is unavailable."
    },
    {
      "title": "Storage Management - Storage Key Isolation",
      "description": "Ensures that different project IDs use isolated storage keys and don't interfere with each other's data."
    },
    {
      "title": "Event Queue Management - Queue Processing",
      "description": "Tests that events are properly queued, batched, and sent to the API endpoint at regular intervals with deduplication."
    },
    {
      "title": "Event Queue Management - Queue Persistence",
      "description": "Validates that unsent events are persisted to storage and recovered after page reload or browser restart."
    },
    {
      "title": "Event Queue Management - Queue Size Limits",
      "description": "Ensures that event queues don't exceed maximum size limits and oldest events are discarded when limits are reached."
    },
    {
      "title": "Event Queue Management - Immediate Flush",
      "description": "Tests that events can be immediately flushed using both async and sync methods, particularly during page unload scenarios."
    },
    {
      "title": "Sampling Configuration - Event Sampling",
      "description": "Validates that sampling rates are properly applied to reduce event volume, users are consistently sampled, and QA mode bypasses sampling."
    },
    {
      "title": "Sampling Configuration - Web Vitals Sampling",
      "description": "Tests that web vitals events have separate sampling rates and long tasks have additional sampling reduction."
    },
    {
      "title": "URL Exclusion - Path Exclusion",
      "description": "Verifies that events are not tracked on pages matching excluded URL path patterns, including wildcard and regex patterns."
    },
    {
      "title": "URL Exclusion - Session Events on Excluded Paths",
      "description": "Ensures that session start/end events are still tracked on excluded paths when necessary for session continuity."
    },
    {
      "title": "Tag System - Page View Tags",
      "description": "Tests that page view events are properly tagged based on URL patterns, device type, and UTM parameters with AND/OR logic."
    },
    {
      "title": "Tag System - Click Event Tags",
      "description": "Validates that click events are tagged based on element selectors, attributes, and other conditions with proper logical operators."
    },
    {
      "title": "Google Analytics Integration - Initialization",
      "description": "Tests that Google Analytics integration initializes correctly with valid measurement ID and sends custom events to GA."
    },
    {
      "title": "Google Analytics Integration - Event Forwarding",
      "description": "Validates that custom TraceLog events are properly forwarded to Google Analytics with correct event names and parameters."
    },
    {
      "title": "QA Mode - Enhanced Logging",
      "description": "Tests that QA mode enables detailed console logging, shows all events including those that would be sampled out, and provides debugging information."
    },
    {
      "title": "QA Mode - Error Throwing",
      "description": "Validates that QA mode throws errors for invalid events and configuration issues that would be silently handled in production."
    },
    {
      "title": "API Communication - Event Delivery",
      "description": "Tests that events are successfully delivered to the API endpoint with correct headers, payload structure, and authentication."
    },
    {
      "title": "API Communication - Network Failure Handling",
      "description": "Validates retry logic, exponential backoff, and event persistence when API requests fail due to network issues."
    },
    {
      "title": "API Communication - Rate Limiting",
      "description": "Tests that rate limiting is respected and events are properly queued when API rate limits are exceeded."
    },
    {
      "title": "Configuration Loading - Remote Config",
      "description": "Validates that remote configuration is properly loaded from API, merged with local configuration, and applied to tracking behavior."
    },
    {
      "title": "Configuration Loading - Config Validation",
      "description": "Tests that invalid configuration responses are handled gracefully with fallback to default configuration."
    },
    {
      "title": "Security - XSS Prevention",
      "description": "Validates that all user input is properly sanitized to prevent XSS attacks through event names, metadata, or page content."
    },
    {
      "title": "Security - Data Sanitization",
      "description": "Tests that potentially sensitive data is sanitized according to security patterns and size limits are enforced."
    },
    {
      "title": "Library Cleanup - Destroy Functionality",
      "description": "Validates that TraceLog.destroy() properly cleans up all event listeners, timers, storage, and restores the environment to pre-initialization state."
    },
    {
      "title": "Memory Management - No Memory Leaks",
      "description": "Tests that repeated initialization and destruction cycles don't cause memory leaks or accumulate event listeners."
    },
    {
      "title": "Activity Detection - User Activity Recognition",
      "description": "Validates that user activity is properly detected through mouse, keyboard, touch, scroll, and visibility events to maintain active sessions."
    },
    {
      "title": "Activity Detection - Inactivity Detection",
      "description": "Tests that user inactivity is correctly identified and triggers appropriate session timeout behavior."
    },
    {
      "title": "Multi-Tab Behavior - Tab Coordination",
      "description": "Validates that multiple tabs coordinate properly through BroadcastChannel for session management and event tracking."
    },
    {
      "title": "Multi-Tab Behavior - Leader Election",
      "description": "Tests that tab leader election works correctly when tabs are opened/closed and ensures only one tab manages session timing."
    },
    {
      "title": "Browser Compatibility - Modern Browser Features",
      "description": "Validates that all features work correctly in modern browsers with full API support (Chrome, Firefox, Safari, Edge)."
    },
    {
      "title": "Browser Compatibility - Graceful Degradation",
      "description": "Tests that library gracefully handles missing APIs (BroadcastChannel, PerformanceObserver, etc.) with appropriate fallbacks."
    },
    {
      "title": "Performance Impact - Library Overhead",
      "description": "Validates that the library has minimal impact on page performance, doesn't block the main thread, and uses passive event listeners where appropriate."
    },
    {
      "title": "Data Accuracy - Event Deduplication",
      "description": "Tests that duplicate events are properly identified and deduplicated while preserving legitimate repeated events."
    },
    {
      "title": "Data Accuracy - Timestamp Consistency",
      "description": "Validates that event timestamps are accurate, consistent, and properly ordered in the event queue."
    },
    {
      "title": "Edge Cases - Rapid Navigation",
      "description": "Tests behavior during rapid page navigation, ensuring events are not lost and session continuity is maintained."
    },
    {
      "title": "Edge Cases - Large Payloads",
      "description": "Validates handling of events with large metadata objects, ensuring they are either accepted or gracefully rejected with clear errors."
    },
    {
      "title": "Integration Testing - Full User Journey",
      "description": "Tests a complete user journey from library initialization through various interactions to session end, validating all events are tracked correctly."
    }
  ]
}